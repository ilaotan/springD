<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<description>SpringMVC Configuration</description>
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<!-- base-package 如果多个，用“,”分隔 -->
	<context:component-scan base-package="com.springD.application" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<!-- spring3.2新增的控制器增强版 -->
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- 开启AOP的注解模式 (方便shiro的注解式权限拦截)-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8"  index="0" name="defaultCharset" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true"/>
                <property name="objectMapper">  
                    <bean class="com.springD.framework.mapper.JsonMapper"/>
                </property> 
			</bean>
			
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:view-controller path="/" view-name="redirect:/front/index"/>

	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler/>

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/resource/**" location="/resource/"/>
	
	<!-- 内容协商管理器  -->
	<!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true"/>
		<!-- 用于开启 /userinfo/123?format=json 的支持-->
		<property name="favorParameter" value="true"/>
		<property name="parameterName" value="format"/>
		<!-- 默认的content type-->
		<property name="defaultContentType" value="text/html"/>
	</bean>
	
	
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html" />
		<property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
	</bean>
	
	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver" class="com.springD.framework.exception.CustomSimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.exception">exception/500</prop>
				<prop key="java.lang.Throwable">exception/exception</prop>
				<prop key="com.springD.framework.exception.SystemException">exception/exception</prop>
			</props>
		</property>
		<property name="statusCodes">     
             <props>     
                 <!-- <prop key="errors/error">500</prop>    --> 
                 <prop key="errors/404">404</prop>     
             </props>     
         </property>
		<!--定义异常处理页面用来获取异常信息的变量名，默认名value为exception-->
		<property name="exceptionAttribute" value="ex"/>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"/>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="exception/500"/>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"/>
	</bean>
	<!-- 全局异常配置 end -->
	
</beans>